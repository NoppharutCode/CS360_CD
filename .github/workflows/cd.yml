name:  Deploy to Amazon EC2

on:
  push:
    branches: [ main ]

  workflow_dispatch:
env:
  ECR_REPOSITORY: cd_cs360_noppharut      # set this to your Amazon ECR repository name
  AWS_REGION: us-east-1   

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2
        
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          
      - name: Create EC2 and deploy application to EC2
        id: deploy-app
        env:
          INSTANCE_PROFILE_ARN: ${{ secrets.INSTANCE_PROFILE_ARN }}
          INSTANCE_PROFILE_NAME: ${{ secrets.INSTANCE_PROFILE_NAME }}
          REGION: ${{ env.AWS_REGION }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          sed -i "s|{{region}}|$REGION|g" script/user_data_script.txt
          sed -i "s|{{ECR_REGISTRY}}|$ECR_REGISTRY|g" script/user_data_script.txt
          sed -i "s|{{ECR_REPOSITORY}}|$ECR_REPOSITORY|g" script/user_data_script.txt
          sed -i "s|{{IMAGE_TAG}}|$IMAGE_TAG|g" script/user_data_script.txt
          
          aws ec2 run-instances --image-id ami-04902260ca3d33422 --instance-type t2.micro  --key-name deploy --security-group-ids sg-009a6eb89dcb61f5d --user-data file://script/user_data_script.txt --iam-instance-profile "Arn=$INSTANCE_PROFILE_ARN,Name=$INSTANCE_PROFILE_NAME"
          
